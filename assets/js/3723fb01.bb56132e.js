"use strict";(self.webpackChunkopenbrush=self.webpackChunkopenbrush||[]).push([[77],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},l="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=p(r),d=o,m=l["".concat(u,".").concat(d)]||l[d]||h[d]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1820:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1,slug:"/OpenBrush",title:"OpenBrush documentation",sidebar_label:"Overview"},i=void 0,s={unversionedId:"OpenBrush/getting-started",id:"OpenBrush/getting-started",title:"OpenBrush documentation",description:"Welcome to OpenBrush documentation! This documentation aims to guide you through the usage of OpenBrush library.",source:"@site/docs/OpenBrush/getting-started.md",sourceDirName:"OpenBrush",slug:"/OpenBrush",permalink:"/docs/OpenBrush",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/OpenBrush",title:"OpenBrush documentation",sidebar_label:"Overview"},sidebar:"tutorialSidebar",next:{title:"Overview",permalink:"/docs/OpenBrush/smart-contracts/overview"}},u={},p=[{value:"What is OpenBrush",id:"what-is-openbrush",level:2},{value:"Why OpenBrush",id:"why-openbrush",level:2}],c={toc:p},l="wrapper";function h(e){let{components:t,...r}=e;return(0,o.kt)(l,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Welcome to OpenBrush documentation! This documentation aims to guide you through the usage of OpenBrush library."),(0,o.kt)("h2",{id:"what-is-openbrush"},"What is OpenBrush"),(0,o.kt)("p",null,"OpenBrush is a library for smart contract development on ink!\nIt provides standard contracts (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/w3f/PSPs"},"based on PSP"),"),\nas well as useful contracts and macros to help you build ink! smart contracts."),(0,o.kt)("h2",{id:"why-openbrush"},"Why OpenBrush"),(0,o.kt)("p",null,"OpenBrush attempts to analogize OpenZeppelin perfectly with Rust\u2019s paradigm,\nenabling users to import contracts implemented by another user without problems\nand reuse the code.\nThere was a need to have a library that can provide base implementations of\nPSPs and to import/reuse them by customizing their own logic. Also, OpenBrush provides other useful\ntraits and macros to help you build ink! smart contracts in easier way."))}h.isMDXComponent=!0}}]);