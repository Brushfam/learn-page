"use strict";(self.webpackChunkopenbrush=self.webpackChunkopenbrush||[]).push([[9726],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3694:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1,title:"Preparation"},a=void 0,l={unversionedId:"Sol2ink/tutorial/preparation",id:"Sol2ink/tutorial/preparation",title:"Preparation",description:"In this tutorial, we will transpile the ERC-20 contract from OpenZeppelin.",source:"@site/docs/Sol2ink/tutorial/preparation.md",sourceDirName:"Sol2ink/tutorial",slug:"/Sol2ink/tutorial/preparation",permalink:"/docs/Sol2ink/tutorial/preparation",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Preparation"},sidebar:"tutorialSidebar",previous:{title:"Capabilities",permalink:"/docs/Sol2ink/capabilities"},next:{title:"Building the ink! smart contract",permalink:"/docs/Sol2ink/tutorial/building"}},p={},c=[{value:"Preparation",id:"preparation",level:4},{value:"Running Sol2Ink",id:"running-sol2ink",level:4}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this tutorial, we will transpile the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol"},"ERC-20 contract")," from OpenZeppelin."),(0,o.kt)("h4",{id:"preparation"},"Preparation"),(0,o.kt)("p",null,"Before we run the program, we will make some adjustments to the ERC-20 file. We will add the events from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol"},"IERC-20 interface")," to our contract. We do this because later in the contract, we want to emit these events. Another thing we will change is to rewrite all functions ",(0,o.kt)("inlineCode",{parentName:"p"},"_msgSender()")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.sender"),". We do this because we want to demonstrate how to call ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.sender")," in ink!."),(0,o.kt)("h4",{id:"running-sol2ink"},"Running Sol2Ink"),(0,o.kt)("p",null,"Running Sol2Ink is easy. First we need to navigate to the folder where we saved ",(0,o.kt)("inlineCode",{parentName:"p"},"sol2ink")," and we will call ",(0,o.kt)("inlineCode",{parentName:"p"},"./sol2ink path"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"path")," is the path to our ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20")," file. The output file will be stored in the newly created folder ",(0,o.kt)("inlineCode",{parentName:"p"},"generated"),", containing all of the files of the contract. Now we will try to build it!"))}d.isMDXComponent=!0}}]);